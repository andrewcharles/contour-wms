<?xml version='1.0' encoding="UTF-8"?>
<WMS_Capabilities version="1.3.0" xmlns="http://www.opengis.net/wms"
  xmlns:xlink="http://www.w3.org/1999/xlink"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.opengis.net/wms http://schemas.opengis.net/wms/1.3.0/capabilities_1_3_0.xsd">
<!-- Service Metadata -->
<Service>
  <!-- The WMT-defined name for this type of service -->
  <Name>WMS</Name>
  <!-- Human-readable title for pick lists -->
  <Title>BOM - Australia</Title>
  <!-- Narrative description providing additional information -->
  <Abstract>Map Server maintained by BOM.  Contact: xx@xxx.gov.au.  Contour Maps.</Abstract>
  <KeywordList>
    <Keyword>contour</Keyword>
    <Keyword>gridded data</Keyword>
  </KeywordList>
  <!-- Top-level web address of service or service provider.  See also OnlineResource
  elements under <DCPType>. -->
  <OnlineResource xmlns:xlink="http://www.w3.org/1999/xlink" xlink:type="simple"
   xlink:href="http://hostname/" />
  <!-- Contact information -->
  <ContactInformation>
    <ContactPersonPrimary>
      <ContactPerson>Jeff Smith</ContactPerson>
      <ContactOrganization>NASA</ContactOrganization>
    </ContactPersonPrimary>
    <ContactPosition>Computer Scientist</ContactPosition>
    <ContactAddress>
      <AddressType>postal</AddressType>
      <Address>NASA Goddard Space Flight Center</Address>
      <City>Greenbelt</City>
      <StateOrProvince>MD</StateOrProvince>
      <PostCode>20771</PostCode>
      <Country>USA</Country>
    </ContactAddress>
    <ContactVoiceTelephone>+1 301 555-1212</ContactVoiceTelephone>
    <ContactElectronicMailAddress>user@host.com</ContactElectronicMailAddress>
  </ContactInformation>
  <!-- Fees or access constraints imposed. -->
  <Fees>none</Fees>
  <AccessConstraints>none</AccessConstraints>
  <LayerLimit>16</LayerLimit>
  <MaxWidth>2048</MaxWidth>
  <MaxHeight>2048</MaxHeight>
</Service>
<Capability>
  <Request>
    <GetCapabilities>
      <Format>text/xml</Format>
      <DCPType>
        <HTTP>
          <Get>
            <OnlineResource xmlns:xlink="http://www.w3.org/1999/xlink"
             xlink:type="simple"
             xlink:href="http://hostname/path?" />
          </Get>
          <Post>
            <OnlineResource xmlns:xlink="http://www.w3.org/1999/xlink"
             xlink:type="simple"
             xlink:href="http://hostname/path?" />
          </Post>
        </HTTP>
      </DCPType>
    </GetCapabilities>
    <GetMap>
      <Format>image/gif</Format>
      <Format>image/png</Format>
      <Format>image/jpeg</Format>
      <DCPType>
        <HTTP>
          <Get>
            <!-- The URL here for invoking GetCapabilities using HTTP GET
            is only a prefix to which a query string is appended. -->
            <OnlineResource xmlns:xlink="http://www.w3.org/1999/xlink"
             xlink:type="simple"
             xlink:href="http://hostname/path?" />
          </Get>
        </HTTP>
      </DCPType>
    </GetMap>
    <GetFeatureInfo>
      <Format>text/xml</Format>
      <Format>text/plain</Format>
      <Format>text/html</Format>
      <DCPType>
        <HTTP>
          <Get>
            <OnlineResource xmlns:xlink="http://www.w3.org/1999/xlink"
             xlink:type="simple"
             xlink:href="http://hostname/path?" />
          </Get>
        </HTTP>
      </DCPType>
    </GetFeatureInfo>
  </Request>
  <Exception>
    <Format>XML</Format>
    <Format>INIMAGE</Format>
    <Format>BLANK</Format>
  </Exception>
  <Layer>
    <Title>Acme Corp. Map Server</Title>
    <CRS>CRS:84</CRS> <!-- all layers are available in at least this CRS -->
    <AuthorityURL name="DIF_ID">
      <OnlineResource xmlns:xlink="http://www.w3.org/1999/xlink" xlink:type="simple"
       xlink:href="http://gcmd.gsfc.nasa.gov/difguide/whatisadif.html" />
    </AuthorityURL>
    <Layer>
      <!-- This parent layer has a Name and can therefore be requested from a Map Server, yielding a map of all subsidiary layers. -->
      <Name>ROADS_RIVERS</Name>
      <Title>Roads and Rivers</Title>
      <!-- See the spec to learn how some characteristics are inherited by
           subsidiary layers. -->
      <CRS>EPSG:26986</CRS> <!-- An additional CRS for this layer -->
      <EX_GeographicBoundingBox>
        <westBoundLongitude>-71.63</westBoundLongitude>
        <eastBoundLongitude>-70.78</eastBoundLongitude>
        <southBoundLatitude>41.75</southBoundLatitude>
        <northBoundLatitude>42.90</northBoundLatitude>
      </EX_GeographicBoundingBox>
      <!-- The optional resx and resy attributes indicate the X and Y spatial
           resolution in the units of that CRS. -->
      <BoundingBox CRS="CRS:84"
       minx="-71.63" miny="41.75" maxx="-70.78" maxy="42.90" resx="0.01" resy="0.01"/>
      <BoundingBox CRS="EPSG:26986"
       minx="189000" miny="834000" maxx="285000" maxy="962000" resx="1" resy="1" />
      <!-- Optional Title, URL and logo image of data provider. -->
      <Attribution>
        <Title>State College University</Title>
        <OnlineResource xmlns:xlink="http://www.w3.org/1999/xlink" xlink:type="simple"
         xlink:href="http://www.university.edu/" />
        <LogoURL width="100" height="100">
          <Format>image/gif</Format>
          <OnlineResource xmlns:xlink="http://www.w3.org/1999/xlink"
           xlink:type="simple"
           xlink:href="http://www.university.edu/icons/logo.gif" />
        </LogoURL>
      </Attribution>
      <!-- Identifier whose meaning is defined in an AuthorityURL element -->
      <Identifier authority="DIF_ID">123456</Identifier>
      <FeatureListURL>
        <Format>XML"</Format>
        <OnlineResource xmlns:xlink="http://www.w3.org/1999/xlink" xlink:type="simple"
         xlink:href="http://www.university.edu/data/roads_rivers.gml" />
      </FeatureListURL>
      <Style>
        <Name>USGS</Name>
        <Title>USGS Topo Map Style</Title>
        <Abstract>Features are shown in a style like that used in USGS topographic maps.</Abstract>
        <!-- A picture of a legend for a Layer in this Style -->
        <LegendURL width="72" height="72">
          <Format>image/gif</Format>
          <OnlineResource xmlns:xlink="http://www.w3.org/1999/xlink"
           xlink:type="simple"
           xlink:href="http://www.university.edu/legends/usgs.gif" />
        </LegendURL>
        <!-- An XSL stylesheet describing how feature data will rendered to create
             a map of this layer. -->
        <StyleSheetURL>
          <Format>text/xsl</Format>
          <OnlineResource xmlns:xlink="http://www.w3.org/1999/xlink"
           xlink:type="simple"
           xlink:href="http://www.university.edu/stylesheets/usgs.xsl" />
        </StyleSheetURL>
      </Style>
      <Layer queryable="1">
        <Name>ROADS_1M</Name>
        <Title>Roads at 1:1M scale</Title>
        <Abstract>Roads at a scale of 1 to 1 million.</Abstract>
        <KeywordList>
          <Keyword>road</Keyword>
          <Keyword>transportation</Keyword>
          <Keyword>atlas</Keyword>
        </KeywordList>
        <Identifier authority="DIF_ID">123456</Identifier>
        <MetadataURL type="FGDC:1998">
                <Format>text/plain</Format>
                <OnlineResource xmlns:xlink="http://www.w3.org/1999/xlink"
                 xlink:type="simple"
                 xlink:href="http://www.university.edu/metadata/roads.txt" />
             </MetadataURL>
        <MetadataURL type="ISO19115:2003">
               <Format>text/xml</Format>
               <OnlineResource xmlns:xlink="http://www.w3.org/1999/xlink"
                xlink:type="simple"
                xlink:href="http://www.university.edu/metadata/roads.xml" />
             </MetadataURL>
        <!-- In addition to the Style specified in the parent Layer, this Layer is
             available in this style. -->
        <Style>
          <Name>ATLAS</Name>
          <Title>Road atlas style</Title>
          <Abstract>Roads are shown in a style like that used in a commercial road atlas.</Abstract>
        <LegendURL width="72" height="72">
          <Format>image/gif</Format>
          <OnlineResource xmlns:xlink="http://www.w3.org/1999/xlink"
           xlink:type="simple"
           xlink:href="http://www.university.edu/legends/atlas.gif" />
        </LegendURL>
        </Style>
      </Layer>
      <Layer queryable="1">
        <Name>RIVERS_1M</Name>
        <Title>Rivers at 1:1M scale</Title>
        <Abstract>Rivers at a scale of 1 to 1 million.</Abstract>
        <KeywordList>
          <Keyword>river</Keyword>
          <Keyword>canal</Keyword>
          <Keyword>waterway</Keyword>
        </KeywordList>
      </Layer>
    </Layer>
    <Layer queryable="1">
      <Title>Weather Forecast Data</Title>
      <CRS>CRS:84</CRS> <!-- harmless repetition of common CRS -->

      <EX_GeographicBoundingBox>
        <westBoundLongitude>-180</westBoundLongitude>
        <eastBoundLongitude>180</eastBoundLongitude>
        <southBoundLatitude>-90</southBoundLatitude>
        <northBoundLatitude>90</northBoundLatitude>
      </EX_GeographicBoundingBox>
      <!-- These weather data are available daily from 1999-01-01 through
           2000-08-22. -->
      <Dimension name="time" units="ISO8601" default="2000-08-22">
         1999-01-01/2000-08-22/P1D
      </Dimension>
      <Layer>
        <Name>Clouds</Name>
        <Title>Forecast cloud cover</Title>
      </Layer>
      <Layer>
        <Name>Temperature</Name>
        <Title>Forecast temperature</Title>
      </Layer>
      <Layer>
        <Name>Pressure</Name>
        <Title>Forecast barometric pressure</Title>
             <!-- This Pressure layer is available at several elevations and times. -->
         <Dimension name="elevation" units="EPSG:5030" />
         <Dimension name="time" units="ISO8601" default="2000-08-22">
           1999-01-01/2000-08-22/P1D</Dimension>
         <Dimension name="elevation" units="CRS:88" default="0" nearestValue="1">
           0,1000,3000,5000,10000</Dimension>
      </Layer>
    </Layer>
    <!-- Example of a layer which is a static map of fixed
         size which the server cannot subset or make transparent -->
    <Layer opaque="1" noSubsets="1" fixedWidth="512" fixedHeight="256">
      <Name>ozone_image</Name>
      <Title>Global ozone distribution (1992)</Title>
      <EX_GeographicBoundingBox>
        <westBoundLongitude>-180</westBoundLongitude>
        <eastBoundLongitude>180</eastBoundLongitude>
        <southBoundLatitude>-90</southBoundLatitude>
        <northBoundLatitude>90</northBoundLatitude>
      </EX_GeographicBoundingBox>
      <Dimension name="time" units="ISO8601" default="1992">1992</Dimension>
    </Layer>
    <!-- Example of a layer which originated from another WMS and has been
         "cascaded" by this WMS. -->
    <Layer cascaded="1">
      <Name>population</Name>
      <Title>World population, annual</Title>
      <EX_GeographicBoundingBox>
        <westBoundLongitude>-180</westBoundLongitude>
        <eastBoundLongitude>180</eastBoundLongitude>
        <southBoundLatitude>-90</southBoundLatitude>
        <northBoundLatitude>90</northBoundLatitude>
      </EX_GeographicBoundingBox>
      <Dimension name="time" units="ISO8601" default="2000">1990/2000/P1Y</Dimension>
    </Layer>
  </Layer>
</Capability>
</WMS_Capabilities>

<?xml version="1.0"?>

<?python

from cows.pylons.genshi_util import RenameElementFilter
from genshi import QName
from routes import url_for

?>

<WMS_Capabilities xmlns:py="http://genshi.edgewall.org/"
          xmlns="http://www.opengis.net/wms"
          xmlns:xlink="http://www.w3.org/1999/xlink"
          version="1.3.0">

  <!--! ====================================================================== -->
  <!--!
      To change the tag name we need to wrap a markup macro in a python
      function
  -->

  <Operation py:def="_opContent(op)">
    <Format py:for="f in op.parameters['Format'].possibleValues.allowedValues" py:content="f"/>
    <DCPType><HTTP>
      <Get>
    <OnlineResource xlink:type="simple" xlink:href="${op.get.href}"/>
      </Get>
    </HTTP></DCPType>
  </Operation>
  <?python
  
  def markupOperation(opName, op):
    """Render an OWS operation description for the Capabilities section.
    """

    return RenameElementFilter(QName(opName))(_opContent(op))

  ?>


<?python

    def showAtt(obj, attname):
        if not hasattr(obj,attname) or getattr(obj, attname) == None:
            return ''
            
        return getattr(obj, attname)
         

?>

    <py:def function="markupLegendURL(l)">
      <LegendURL width="${l.width}" height="${l.height}">
         <Format>${l.format}</Format>
         <OnlineResource xlink:type="simple" xlink:href="${l.onlineResource.href}"/>
      </LegendURL>
    </py:def>


    <py:def function="markupStyle(s)">
      <Style>
        <Name>${s.name}</Name>
        <Title>${s.title}</Title>
        <py:for each="l in s.legendURLs" py:if="getattr(s, 'legendURLs', None) != None">
          ${markupLegendURL(l)}
        </py:for>
      </Style>
    </py:def>
    
    <py:def function="markupMetadataURL(l)">
      <MetadataURL type="${showAtt(l, 'type')}" >
         <Format>${l.format}</Format>
         <OnlineResource xlink:type="simple" xlink:href="${l.onlineResource.href}"/>
      </MetadataURL>
    </py:def>    

  <Layer py:def="markupLayer(ds)" queryable="${int(ds.queryable)}">
  
    <py:if test="ds.identifier is not None">
	    <Name py:content="ds.identifier"/>
    </py:if>
    
    <Title py:content="ds.titles[0]"/>
    <Abstract py:if="len(ds.abstracts)>0" py:content="ds.abstracts[0]"/>
    

    <py:if test="ds.CRSs is not None">    
        <CRS py:for="crs in ds.CRSs" py:content="crs"/>
    </py:if>
    
    <py:if test="ds.wgs84BoundingBoxes[0] is not None">
    
	    <?python exBBox = ds.wgs84BoundingBoxes[0] ?>
	    <EX_GeographicBoundingBox>
	      <westBoundLongitude py:content="exBBox.lowerCorner[0]"/>
	      <eastBoundLongitude py:content="exBBox.upperCorner[0]"/>
	      <southBoundLatitude py:content="exBBox.lowerCorner[1]"/>
	      <northBoundLatitude py:content="exBBox.upperCorner[1]"/>
	    </EX_GeographicBoundingBox>
    </py:if>

    <py:for each="bb in ds.boundingBoxes">
      <BoundingBox CRS="${bb.crs}"
           minx="${'%.2f'%bb.lowerCorner[0]}"
           miny="${'%.2f'%bb.lowerCorner[1]}"
           maxx="${'%.2f'%bb.upperCorner[0]}"
           maxy="${'%.2f'%bb.upperCorner[1]}"/>
    </py:for>

    <!--!TODO Attribution from metadata -->
    <!--!TODO AuthorityURL from metadata -->
    <!--!TODO FeatureListURL from metadata -->
    <!--!TODO Identifier from metadata -->
    <!--!TODO DataURL from metadata -->
    <!--!TODO MetadataURL from metadata -->
    
    <!--!NOTE: this is an ad-hoc implementation not using the ows_common.model classes
         TODO: fixme -->
    <!--!TODO ScaleHint -->

    <Dimension py:for="d_n, d in ds.dimensions.iteritems()"
           name="${d_n}" units="${d.valuesUnit}"
           unitSymbol="${d.unitSymbol}"
           default="${d.defaultValue}" 
           py:content="','.join(d.possibleValues.allowedValues)"/>
<!--! nearestValue="${int(d.nearestValue)}" -->

    <!--!NOTE: if there is no identifier then the layer can never be selected
               so don't need to bother with styles or metadata urls -->
    <py:if test="ds.identifier is not None">
    
	    <py:choose test="ds.styles">
	
	        <py:when test="['']">
	            <Style>
	                <Name>default</Name>
	                <Title>Default</Title>
	                <LegendURL width="${ds.legendSize[0]}" height="${ds.legendSize[1]}">
	                    <Format py:for="f in ds.legendFormats" py:content="f"/>
	                    <OnlineResource xlink:type="simple" xlink:href="${url_for(qualified=True, action='index')}?request=GetLegend&amp;layers=${ds.identifier}"/>
	                </LegendURL>
	            </Style>
	        </py:when>
	
	        <py:otherwise>
	            <py:for each="s in ds.styles" py:if="getattr(ds, 'styles', None) != None">
	                ${markupStyle(s)}
	            </py:for>
	        </py:otherwise>
	
	    </py:choose>
	    
	    <py:if test="len(ds.metadataURLs) > 0">
	        <py:for each="url in ds.metadataURLs">
	            ${markupMetadataURL(url)}
	        </py:for>
	    </py:if>
	    
    </py:if>


    <Layer py:for="c in ds.children" py:replace="markupLayer(c)"></Layer>

  </Layer>

  <!--! ====================================================================== -->


  <Service py:with="sm=c.capabilities; si=c.capabilities.serviceIdentification">
    <Name>WMS</Name>
    <Title py:content="si.titles[0]"/>
    <Abstract py:if="len(si.abstracts)>0" py:content="si.abstracts[0]"/>
    <KeywordList>
      <Keyword py:for="kw in si.keywords"
           py:content="kw"/>
    </KeywordList>
    <OnlineResource xlink:type="simple" xlink:href="${url_for(qualified=True, action='index')}?"/>
    
    <ContactInformation py:if="sm.serviceProvider is not None"
            py:with="rp=sm.serviceProvider.serviceContact">
      <ContactPersonPrimary>
    <ContactPerson py:if="rp is not None" py:content="rp.individualName"/>
    <ContactOrganization py:content="sm.serviceProvider.providerName"/>
      </ContactPersonPrimary>
      <ContactPosition py:content="rp.positionName"/>

      <py:with vars="cn=rp.contactInfo" py:if="rp.contactInfo is not None">
    <ContactAddress py:if="cn.address is not None">
      <AddressType>postal</AddressType>
      <Address>
        <py:for each="d in cn.address.deliveryPoints">${d}</py:for>
      </Address>
      <City py:content="cn.address.city"/>
      <StateOrProvince py:content="cn.address.administrativeArea"/>
      <PostCode py:content="cn.address.postalCode"/>
      <Country py:content="cn.address.country"/>
    </ContactAddress>
    <ContactVoiceTelephone py:if="cn.phone is not None"
                   py:content="cn.phone.voice"/>
    <ContactFacsimileTelephone py:if="cn.phone is not None"
                   py:content="cn.phone.facsimile"/>
    <ContactElectronicMailAddress py:if="cn.address is not None"
                      py:content="cn.address.electronicMailAddress"/>
      </py:with>
    </ContactInformation>
    
    <Fees py:content="si.fees"/>
    <AccessConstraints py:content="si.accessConstraints"/>

    <!--!TODO: These are hardcoded for Jon Blower's WMS->KML service.  Make generic.-->
    <LayerLimit>1</LayerLimit>
    <MaxWidth>640</MaxWidth>
    <MaxHeight>640</MaxHeight>

  </Service>
  <!--! These fields are represented in ows_common as service constraints -->
  <Capability py:with="sm=c.capabilities; om=sm.operationsMetadata">
    <py:if test="om is not None">
      <?python
    ops = ['GetCapabilities', 'GetMap', 'GetFeatureInfo']
    eops = [x for x in om.operationDict.keys() if x not in ops]
      ?>
      <Request>
      
    <py:for each="opName in ops" py:if="opName in om.operationDict.keys()">
      <span py:content="markupOperation(opName, om.operationDict[opName])" py:strip="True"/>
    </py:for>
    
    <py:for each="opName in ops" py:if="opName in om.operationDict.keys()">
      <?python exceptions = om.operationDict[opName].parameters.get('ExceptionFormat') ?>
      <Exception py:if="exceptions is not None">
        <Format py:for="e in exceptions.possibleValues.allowedValues"
            py:content="e"/>
      </Exception>
    </py:for>
      </Request>

      <!--!TODO:  capability exceptions -->
      <Exception><Format>text/xml</Format></Exception>      
      
      <_ExtendedCapabilities>
      <Request>
    <py:for each="opName in eops">
      <span py:content="markupOperation(opName, om.operationDict[opName])" py:strip="True"/>
    </py:for>
    <py:for each="opName in eops">
      <?python exceptions = om.operationDict[opName].parameters.get('ExceptionFormat') ?>
      <Exception py:if="exceptions is not None">
        <Format py:for="e in exceptions.possibleValues.allowedValues"
            py:content="e"/>
      </Exception>
    </py:for>
      </Request>
      </_ExtendedCapabilities>
    </py:if>
    
    <Layer py:if="sm.contents is not None">
      <Title>Contents</Title>
      <Layer py:for="ds in sm.contents.datasetSummaries"
         py:replace="markupLayer(ds)">
      </Layer>
    </Layer>
  </Capability>
</WMS_Capabilities>
